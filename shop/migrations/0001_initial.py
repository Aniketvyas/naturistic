# Generated by Django 4.2.3 on 2023-07-29 21:19

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sessions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='blogs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=10000)),
                ('slug', models.SlugField(blank=True, max_length=10000, null=True, unique=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('publish_on', models.DateField()),
                ('meta_description', models.TextField(blank=True, max_length=10000, null=True)),
                ('meta_keywords', models.TextField(blank=True, max_length=10000, null=True)),
                ('meta_author', models.TextField(blank=True, max_length=10000, null=True)),
                ('show_on_homepage', models.BooleanField()),
                ('is_page', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='cart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='categories',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100000)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='contact_query',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=100)),
                ('message', models.TextField()),
                ('contact_no', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='global_properties',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('property', models.CharField(max_length=1000)),
                ('value', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='guestCart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sessions.session')),
            ],
        ),
        migrations.CreateModel(
            name='newsletter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='orders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('order_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=1000)),
                ('address', models.TextField()),
                ('contact', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=1000)),
                ('tax', models.IntegerField()),
                ('status', models.CharField(choices=[('CONFIRMED', 'CONFIRMED'), ('NOT CONFIRMED', 'NOT CONFIRMED'), ('SHIPPED', 'SHIPPED'), ('DELIVERED', 'DELIVERED'), ('OUT FOR DELIVERY', 'OUT FOR DELIVERY'), ('CANCELED', 'CANCELED'), ('REFUND INITIATED', 'REFUND INITIATED'), ('REFUNDED', 'REFUNDED')], max_length=10000)),
                ('total_amount', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('tracking_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('tracking_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('order_string', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pincodes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pincode', models.IntegerField()),
                ('state', models.CharField(max_length=1000)),
                ('village', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('sub_district', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='products',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1000000)),
                ('image', models.ImageField(upload_to='')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('price', models.IntegerField()),
                ('discounted_price', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('quantity', models.IntegerField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('eligible_for_cod', models.BooleanField()),
                ('specifications', ckeditor.fields.RichTextField()),
                ('warranty_info', ckeditor.fields.RichTextField()),
                ('shipping_info', ckeditor.fields.RichTextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.categories')),
            ],
        ),
        migrations.CreateModel(
            name='vouchers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('voucher_code', models.CharField(max_length=100)),
                ('discount_price', models.IntegerField()),
                ('minimum_amount', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('expiry', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='temporaryLoginData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Tempcart', to='shop.guestcart')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sessions.session')),
            ],
        ),
        migrations.CreateModel(
            name='reviews',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('review_description', models.TextField()),
                ('rating', models.CharField(max_length=1)),
                ('created_on', models.DateTimeField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='payments',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('payment_status', models.BooleanField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=1000, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('merchantTransactionId', models.CharField(blank=True, max_length=1000, null=True)),
                ('phonepeTransactionId', models.CharField(blank=True, max_length=1000, null=True)),
                ('phonepeReferenceId', models.CharField(blank=True, max_length=1000, null=True)),
                ('merchantId', models.CharField(blank=True, max_length=1000, null=True)),
                ('redirectInfo', models.TextField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('paymentViaCOD', models.BooleanField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orders')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='postal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.pincodes'),
        ),
        migrations.AddField(
            model_name='orders',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='order_items',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('price_at_bought', models.IntegerField()),
                ('original_price', models.IntegerField()),
                ('voucher_applied', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
            ],
        ),
        migrations.CreateModel(
            name='invoices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_id', models.CharField(max_length=100000)),
                ('date_of_generation', models.DateTimeField(auto_now_add=True)),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orders')),
            ],
        ),
        migrations.CreateModel(
            name='highlights',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('highlight_heading', models.CharField(max_length=10000000)),
                ('highlight_description', models.TextField()),
                ('highlight_image', models.FileField(upload_to='')),
                ('background_color', models.CharField(max_length=100000)),
                ('text_color', models.CharField(max_length=10000)),
                ('description_color', models.CharField(max_length=100)),
                ('image_orientation_on_left', models.BooleanField()),
                ('button_color', models.CharField(choices=[('btn btn-danger', 'red'), ('btn btn-primary', 'blue'), ('btn btn-success', 'green'), ('btn btn-default', 'white'), ('btn btn-info', 'sky blue'), ('btn btn-secondary', 'Grey')], max_length=100000)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
            ],
        ),
        migrations.CreateModel(
            name='highlighted_products',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('show_on_home_page', models.BooleanField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
            ],
        ),
        migrations.CreateModel(
            name='guestCartItems',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.guestcart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
            ],
        ),
        migrations.CreateModel(
            name='cartItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products')),
            ],
        ),
        migrations.CreateModel(
            name='applied_vouchers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('applied_on', models.DateTimeField()),
                ('previous_price', models.IntegerField()),
                ('after_price', models.IntegerField()),
                ('payment_done', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.vouchers')),
            ],
        ),
    ]
